spring.application.name=api-gateway
server.port=9090

# Spring Cloud Gateway Route Configuration
spring.cloud.gateway.routes[0].id=train-service
spring.cloud.gateway.routes[0].uri=http://localhost:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/trains/**

spring.cloud.gateway.routes[1].id=search-service
spring.cloud.gateway.routes[1].uri=http://localhost:8082
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/search/**

spring.cloud.gateway.routes[2].id=seat-availability-service
spring.cloud.gateway.routes[2].uri=http://localhost:8083
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/seats/**

spring.cloud.gateway.routes[3].id=passenger-service
spring.cloud.gateway.routes[3].uri=http://localhost:8084
spring.cloud.gateway.routes[3].predicates[0]=Path=/api/passengers/**

spring.cloud.gateway.routes[4].id=booking-service
spring.cloud.gateway.routes[4].uri=http://localhost:8085
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/bookings/**

#
#spring.cloud.gateway.routes[4].id=seat-availability-service
#spring.cloud.gateway.routes[4].uri=http://localhost:8083
#spring.cloud.gateway.routes[4].predicates[0]=Path=/api/seats/**
#spring.cloud.gateway.routes[4].filters[0]=AuthenticationFilter



spring:
  application:
    name: api-gateway
  cloud:
    gateway:
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "http://localhost:3000"
            allowedMethods:
              - GET
              - POST
              - PUT
              - DELETE
              - OPTIONS
            allowedHeaders:
              - Authorization
              - Content-Type
              - Accept
            allowCredentials: true

